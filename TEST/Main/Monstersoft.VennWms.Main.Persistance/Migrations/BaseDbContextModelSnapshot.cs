// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monstersoft.VennWms.Main.Persistance.Contexts;

#nullable disable

namespace Monstersoft.VennWms.Main.Persistance.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Barcode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Copy")
                        .HasColumnType("int")
                        .HasColumnName("Copy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Query");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Barcodes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.BarcodeArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BarcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BarcodeId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("QueryField")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("QueryField");

                    b.Property<string>("TextField")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("TextField");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeId");

                    b.ToTable("BarcodeAreas", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Printer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BarcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BarcodeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("PrinterAddress")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("PrinterAddress");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeId");

                    b.ToTable("Printers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Description" }, "UK_AttributeInputTypes_Description")
                        .IsUnique();

                    b.ToTable("AttributeInputTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1416),
                            Description = "Text"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1427),
                            Description = "Bool"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1429),
                            Description = "Numeric"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1431),
                            Description = "Date"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1433),
                            Description = "DateTime"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ContainerUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<string>("Counter")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("Counter");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CountryCode");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("FirstDigit")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("FirstDigit");

                    b.Property<string>("ProducerCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("ProducerCode");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContainerUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PAL",
                            Counter = "101",
                            CountryCode = "40",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1687),
                            DepositorId = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            Description = "Pallet",
                            FirstDigit = "P",
                            ProducerCode = "1234567"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EUR",
                            Counter = "201",
                            CountryCode = "40",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1690),
                            DepositorId = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            Description = "Euro Pallet",
                            FirstDigit = "E",
                            ProducerCode = "1234567"
                        },
                        new
                        {
                            Id = 3,
                            Code = "PCK",
                            Counter = "301",
                            CountryCode = "40",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1692),
                            DepositorId = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            Description = "Packing Pallet",
                            FirstDigit = "C",
                            ProducerCode = "1234567"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AMR",
                            Counter = "401",
                            CountryCode = "40",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1694),
                            DepositorId = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            Description = "American Pallet",
                            FirstDigit = "A",
                            ProducerCode = "1234567"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ProgressStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_ProgressStatuses_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ProgressStatuses_Description")
                        .IsUnique();

                    b.ToTable("ProgressStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "01",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2054),
                            Description = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Code = "02",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2056),
                            Description = "ToPick"
                        },
                        new
                        {
                            Id = 3,
                            Code = "03",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2057),
                            Description = "InPick"
                        },
                        new
                        {
                            Id = 4,
                            Code = "04",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2058),
                            Description = "Picked"
                        },
                        new
                        {
                            Id = 5,
                            Code = "05",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2059),
                            Description = "InSorting"
                        },
                        new
                        {
                            Id = 6,
                            Code = "06",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2061),
                            Description = "Sorted"
                        },
                        new
                        {
                            Id = 7,
                            Code = "07",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2062),
                            Description = "InPacking"
                        },
                        new
                        {
                            Id = 8,
                            Code = "08",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2063),
                            Description = "Packed"
                        },
                        new
                        {
                            Id = 9,
                            Code = "09",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2064),
                            Description = "InLoading"
                        },
                        new
                        {
                            Id = 10,
                            Code = "10",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2065),
                            Description = "Completed"
                        },
                        new
                        {
                            Id = 11,
                            Code = "11",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2066),
                            Description = "Cancelled"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_ReserveReasons_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ReserveReasons_Description")
                        .IsUnique();

                    b.ToTable("ReserveReasons", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_Status_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_Status_Description")
                        .IsUnique();

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "01",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2143),
                            Description = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Code = "02",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2145),
                            Description = "Executing"
                        },
                        new
                        {
                            Id = 3,
                            Code = "03",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2146),
                            Description = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            Code = "04",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2147),
                            Description = "Cancelled"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_Units_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_Units_Description")
                        .IsUnique();

                    b.ToTable("Units", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EA",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(2223),
                            DepositorId = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            Description = "Adet"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_UnsuitReasons_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_UnsuitReasons_Description")
                        .IsUnique();

                    b.ToTable("UnsuitReasons", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DisturbitorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("DisturbitorId");

                    b.HasIndex(new[] { "Code" }, "UK_Branchs_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "UK_Branchs_Name")
                        .IsUnique();

                    b.ToTable("Branchs", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("FaxNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TaxNumber");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TaxOffice");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_Companies_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "UK_Companies_Name")
                        .IsUnique();

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "Code" }, "UK_Customers_Code")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Depositor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorCompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorCompanyId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("DepositorCompanyId");

                    b.HasIndex(new[] { "Code" }, "UK_Depositors_Code")
                        .IsUnique();

                    b.ToTable("Depositors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("202d64f3-4474-4b55-b30d-61c430799efa"),
                            BuildingId = new Guid("6b94bdfe-4158-4e98-816e-a3422816b2a3"),
                            Code = "MAIN",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1846),
                            DepositorCompanyId = new Guid("dd4d5460-8146-4e62-ac19-a74d89955dd7")
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.DepositorCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("FaxNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TaxNumber");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TaxOffice");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_DepositorCompanies_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "UK_DepositorCompanies_Name")
                        .IsUnique();

                    b.ToTable("DepositorCompanies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd4d5460-8146-4e62-ac19-a74d89955dd7"),
                            Code = "MAIN",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1772),
                            Description = "Main Company",
                            FaxNumber = "123456789101",
                            Name = "Main Company LTD.",
                            PhoneNumber = "905432044767",
                            TaxNumber = "123456789",
                            TaxOffice = "Istanbul Anadolu Kurumlar VD"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Disturbitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "Code" }, "UK_Disturbitors_Code")
                        .IsUnique();

                    b.ToTable("Disturbitors", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Receiver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex(new[] { "Code" }, "UK_Receivers_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "UK_Receivers_Name")
                        .IsUnique();

                    b.ToTable("Receivers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "Code" }, "UK_Suppliers_Code")
                        .IsUnique();

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Address");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("City");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Country");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Province");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_Buildings_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_Buildings_Description")
                        .IsUnique();

                    b.ToTable("Buildings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b94bdfe-4158-4e98-816e-a3422816b2a3"),
                            Address = "Deri Org. San. Bolgesi No:26",
                            City = "Istanbul",
                            Code = "MAIN",
                            Country = "Turkey",
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1613),
                            Description = "Main Factory",
                            Province = "Tuzla",
                            ZipCode = "34953"
                        });
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<Guid>("StorageSystemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StorageSystemId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("StorageSystemId");

                    b.HasIndex(new[] { "Code" }, "UK_Locations_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_Locations_Description")
                        .IsUnique();

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex(new[] { "Code" }, "UK_Sites_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_Sites_Description")
                        .IsUnique();

                    b.ToTable("Sites", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.StorageSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Description");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SiteId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex(new[] { "Code" }, "UK_StorageSystems_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_StorageSystems_Description")
                        .IsUnique();

                    b.ToTable("StorageSystems", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("FromLocaitonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromLocaitonId");

                    b.Property<Guid?>("FromLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<Guid>("ToLocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToLocationId");

                    b.Property<Guid>("TransactionLogId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TransactionLogId");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TransactionTypeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FromLocationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ToLocationId");

                    b.HasIndex("TransactionLogId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("LogStocks", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FromValue")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FromValue");

                    b.Property<Guid>("LogStockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LogStockId");

                    b.Property<Guid>("StockAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockAttributeId");

                    b.Property<string>("ToValue")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ToValue");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("LogStockId");

                    b.HasIndex("StockAttributeId");

                    b.ToTable("LogStockAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockContainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("FromContainerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromContainerId");

                    b.Property<string>("FromContainerSSCC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FromContainerSSCC");

                    b.Property<Guid>("LogStockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LogStockId");

                    b.Property<Guid>("ToContainerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToContainerId");

                    b.Property<string>("ToContainerSSCC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ToContainerSSCC");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("LogStockId");

                    b.ToTable("LogStockContainers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockReserveReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("FromReasaonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromReasaonId");

                    b.Property<Guid?>("FromReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LogStockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LogStockId");

                    b.Property<Guid?>("ReserveReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ToReasaonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToReasaonId");

                    b.Property<Guid?>("ToReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FromReasonId");

                    b.HasIndex("LogStockId");

                    b.HasIndex("ReserveReasonId");

                    b.HasIndex("ToReasonId");

                    b.ToTable("LogStockReserveReasons", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockUnsuitReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("FromReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromResaonId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromResaonId");

                    b.Property<Guid>("LogStockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LogStockId");

                    b.Property<Guid?>("ToResaonId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToResaonId");

                    b.Property<Guid?>("UnsuitReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FromReasonId");

                    b.HasIndex("LogStockId");

                    b.HasIndex("ToResaonId");

                    b.HasIndex("UnsuitReasonId");

                    b.ToTable("LogStockUnsuitReasons", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.TransactionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime>("LogDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<Guid?>("ReceiptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptId");

                    b.Property<Guid?>("ReturnId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid?>("WorkTaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WorkTaskId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("TransactionLogs", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActualDate");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("OrderTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderTypeId");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiverId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Code" }, "UK_Orders_Code")
                        .IsUnique();

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsItemAttribte")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_OrderAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_OrderAttributes_Description")
                        .IsUnique();

                    b.ToTable("OrderAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderAttributeId");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("OrderAttributeId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("UnitId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItemMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderItemId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItemStockAttrValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderItemId");

                    b.Property<Guid>("StockAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockAttributeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("StockAttributeId");

                    b.ToTable("OrderItemStockAttrValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsCodeGenerate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_OrderTypes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_OrderTypes_Description")
                        .IsUnique();

                    b.ToTable("OrderTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_PoAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_PoAttributes_Description")
                        .IsUnique();

                    b.ToTable("PoAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("PoAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PoAttributeId");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseOrderId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("PoAttributeId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PoAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseOrderId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PoMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsCodeGenerate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_PoTypes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_PoTypes_Description")
                        .IsUnique();

                    b.ToTable("PoTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<Guid>("PoTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PoTypeId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SupplierId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("PoTypeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex(new[] { "Code" }, "UK_PurchaseOrders_Code")
                        .IsUnique();

                    b.ToTable("PurchaseOrders", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AlternativeCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("AlternativeCode");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_ProductAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ProductAttributes_Description")
                        .IsUnique();

                    b.ToTable("ProductAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ProductAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductAttributeId");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseOrderId");

                    b.Property<Guid>("ReceiptTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptTypeId");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReceiveDate");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("ReceiptTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_Receipts_Code")
                        .IsUnique();

                    b.ToTable("Receipts", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_ReceiptAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ReceiptAttributes_Description")
                        .IsUnique();

                    b.ToTable("ReceiptAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ReceiptAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptAttributeId");

                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptAttributeId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("ActualQuantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("ActualQuantity");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<decimal>("ExpectedQuantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("ExpectedQuantity");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("UnitId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("UnitId");

                    b.ToTable("ReceiptItems", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItemMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ReceiptItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptItemId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptItemId");

                    b.ToTable("ReceiptItemMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItmStockAttrValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("ReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiptItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptItemId");

                    b.Property<Guid>("StockAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockAttributeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("ReceiptItemId");

                    b.HasIndex("StockAttributeId");

                    b.ToTable("ReceiptItmStockAttrValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsCodeGenerate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_ReceiptTypes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ReceiptTypes_Description")
                        .IsUnique();

                    b.ToTable("ReceiptTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReceiveDate");

                    b.Property<Guid>("ReturnTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnTypeId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReturnTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_Returns_Code")
                        .IsUnique();

                    b.ToTable("Returns", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_ReturnAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ReturnAttributes_Description")
                        .IsUnique();

                    b.ToTable("ReturnAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ReturnAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnAttributeId");

                    b.Property<Guid>("ReturnId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReturnAttributeId");

                    b.HasIndex("ReturnId");

                    b.ToTable("ReturnAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("ActualQuantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("ActualQuantity");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<decimal>("ExpectedQuantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("ExpectedQuantity");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("ReturnId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnId");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasColumnName("UnitId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("UnitId");

                    b.ToTable("ReturnItems", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItemMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ReturnItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnItemId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReturnItemId");

                    b.ToTable("ReturnItemMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItmStockAttrValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ReturnItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnItemId");

                    b.Property<Guid>("StockAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockAttributeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReturnItemId");

                    b.HasIndex("StockAttributeId");

                    b.ToTable("ReturnItmStockAttrValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ReturnId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReturnId");

                    b.ToTable("ReturnMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsCodeGenerate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_ReturnTypes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ReturnTypes_Description")
                        .IsUnique();

                    b.ToTable("ReturnTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderItemId");

                    b.Property<Guid>("OrderShipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderShipmentId");

                    b.Property<Guid>("ProgressStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProgressStatusId");

                    b.Property<int?>("ProgressStatusId1")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("ProgressStatusId1");

                    b.ToTable("OrderShipItems", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderShipItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderShipItemId");

                    b.Property<Guid>("OrderShipItemTaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderShipItemTaskId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderShipItemTaskId");

                    b.ToTable("OrderShipItemStocks", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OrderShipItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderShipItemId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("WorkTaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WorkTaskId");

                    b.HasKey("Id");

                    b.HasIndex("OrderShipItemId");

                    b.ToTable("OrderShipItemTasks", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime?>("LastMoveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastMoveDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<int>("ProgressStatusId")
                        .HasColumnType("int")
                        .HasColumnName("ProgressStatusId");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShipmentId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProgressStatusId");

                    b.HasIndex(new[] { "Code" }, "UK_OrderShipments_Code")
                        .IsUnique();

                    b.ToTable("OrderShipments", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("ActualDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActualDate");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BranchId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<Guid>("DistirbutorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DistirbutorId");

                    b.Property<Guid?>("DisturbitorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ShipmentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShipmentTypeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DisturbitorId");

                    b.HasIndex("ShipmentTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_Shipments_Code")
                        .IsUnique();

                    b.ToTable("Shipments", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_ShipmentAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ShipmentAttributes_Description")
                        .IsUnique();

                    b.ToTable("ShipmentAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ShipmentAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShipmentAttributeId");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShipmentId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentAttributeId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShipmentId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsCodeGenerate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_ShipmentTypes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_ShipmentTypes_Description")
                        .IsUnique();

                    b.ToTable("ShipmentTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<decimal>("FreeQuantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("FreeQuantity");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationId");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<Guid?>("ReceiptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReceiptId");

                    b.Property<Guid?>("ReturnId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReturnId");

                    b.Property<Guid>("StockContainerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockContainerId");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UnitId");

                    b.Property<int?>("UnitId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("ReturnId");

                    b.HasIndex("StockContainerId");

                    b.HasIndex("UnitId1");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AttributeInputTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeInputTypeId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsNecessary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeInputTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_StockAttributes_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Description" }, "UK_StockAttributes_Description")
                        .IsUnique();

                    b.ToTable("StockAttributes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("StockAttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockAttributeId");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("StockAttributeId");

                    b.HasIndex("StockId");

                    b.ToTable("StockAttributeValues", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockContainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("ContainerUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContainerUnitId");

                    b.Property<int?>("ContainerUnitId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Sscc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Sscc");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ContainerUnitId1");

                    b.ToTable("StockContainers", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EditDate");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InputDate");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockMemos", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockReserveReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("ReserveReasonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReserveReasonId");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ReserveReasonId");

                    b.HasIndex("StockId");

                    b.ToTable("StockReserveReasons", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockUnsuitReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<Guid>("UnsuitReasonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UnsuitReasonId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("UnsuitReasonId");

                    b.ToTable("StockUnsuitReason", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.TaskStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("WorkTaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WorkTaskId");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("TaskStocks", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TaskList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_TaskLists_Code")
                        .IsUnique();

                    b.ToTable("TaskLists", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<int>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("Counter");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Format");

                    b.Property<bool>("IsLogging")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UK_TransactionTypes_Code")
                        .IsUnique();

                    b.ToTable("TransactionTypes", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.WorkTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepositorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepositorId");

                    b.Property<Guid>("FromLocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromLocationId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18,6)")
                        .HasColumnName("Quantity");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockId");

                    b.Property<Guid>("TaskListId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TaskListId");

                    b.Property<Guid>("ToLocaitonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToLocaitonId");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TransactionTypeId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("StockId");

                    b.HasIndex("TaskListId");

                    b.HasIndex("TransactionTypeId");

                    b.HasIndex(new[] { "Code" }, "UK_WorkTasks_Code")
                        .IsUnique();

                    b.ToTable("WorkTasks", (string)null);
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.EmailAuthenticator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivationKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UK_OperationClaims_Name")
                        .IsUnique();

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1977),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1978),
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1979),
                            Name = "Read"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1980),
                            Name = "Write"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1981),
                            Name = "Add"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1982),
                            Name = "Update"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 26, 22, 40, 12, 332, DateTimeKind.Local).AddTicks(1984),
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.OtpAuthenticator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expires");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReplacedByToken");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2")
                        .HasColumnName("Revoked");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RevokedByIp");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("int")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("LocalityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LocalityId");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UK_Users_Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex(new[] { "UserId", "OperationClaimId" }, "UK_UserOperationClaims_UserId_OperationClaimId")
                        .IsUnique();

                    b.ToTable("UserOperationClaims", (string)null);
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.BarcodeArea", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Barcode", "Barcode")
                        .WithMany("BarcodeAreas")
                        .HasForeignKey("BarcodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barcode");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Printer", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Barcode", "Barcode")
                        .WithMany("Printers")
                        .HasForeignKey("BarcodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barcode");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Branch", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Branches")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Disturbitor", null)
                        .WithMany("Branches")
                        .HasForeignKey("DisturbitorId");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Customer", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Customers")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Company", "Company")
                        .WithMany("Customers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Depositor", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Depositors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.DepositorCompany", "DepositorCompany")
                        .WithMany("Depositors")
                        .HasForeignKey("DepositorCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("DepositorCompany");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Disturbitor", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Disturbitors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Company", "Company")
                        .WithMany("Disturbitors")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Receiver", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Receivers")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Supplier", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Suppliers")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Company", "Company")
                        .WithMany("Suppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.StorageSystem", "StorageSystem")
                        .WithMany("Locations")
                        .HasForeignKey("StorageSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StorageSystem");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Site", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", "Building")
                        .WithMany("Sites")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.StorageSystem", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Site", "Site")
                        .WithMany("StorageSystems")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", "FromLocation")
                        .WithMany()
                        .HasForeignKey("FromLocationId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", null)
                        .WithMany("LogStocks")
                        .HasForeignKey("LocationId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("LogStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", "ToLocation")
                        .WithMany()
                        .HasForeignKey("ToLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.TransactionLog", "TransactionLog")
                        .WithMany("LogStocks")
                        .HasForeignKey("TransactionLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TransactionType", "TransactionType")
                        .WithMany("LogStocks")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromLocation");

                    b.Navigation("Product");

                    b.Navigation("ToLocation");

                    b.Navigation("TransactionLog");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", "LogStock")
                        .WithMany("LogStockAttributeValues")
                        .HasForeignKey("LogStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", "StockAttribute")
                        .WithMany("LogStockAttributeValues")
                        .HasForeignKey("StockAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogStock");

                    b.Navigation("StockAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockContainer", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", "LogStock")
                        .WithMany("LogStockContainers")
                        .HasForeignKey("LogStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogStock");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockReserveReason", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", "FromReason")
                        .WithMany()
                        .HasForeignKey("FromReasonId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", "LogStock")
                        .WithMany("LogStockReserveReasons")
                        .HasForeignKey("LogStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", null)
                        .WithMany("LogStockReserveReasons")
                        .HasForeignKey("ReserveReasonId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", "ToReason")
                        .WithMany()
                        .HasForeignKey("ToReasonId");

                    b.Navigation("FromReason");

                    b.Navigation("LogStock");

                    b.Navigation("ToReason");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStockUnsuitReason", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", "FromReason")
                        .WithMany()
                        .HasForeignKey("FromReasonId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", "LogStock")
                        .WithMany("LogStockUnsuitReasons")
                        .HasForeignKey("LogStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", "ToResaon")
                        .WithMany()
                        .HasForeignKey("ToResaonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", null)
                        .WithMany("LogStockUnsuitReasons")
                        .HasForeignKey("UnsuitReasonId");

                    b.Navigation("FromReason");

                    b.Navigation("LogStock");

                    b.Navigation("ToResaon");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.TransactionLog", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", "Order")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("OrderId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", "Receipt")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("ReceiptId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", "Return")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("ReturnId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.WorkTask", "WorkTask")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("Order");

                    b.Navigation("Receipt");

                    b.Navigation("Return");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderType", "OrderType")
                        .WithMany("Orders")
                        .HasForeignKey("OrderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("OrderType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("OrderAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttribute", "OrderAttribute")
                        .WithMany("OrderAttributeValues")
                        .HasForeignKey("OrderAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", "Order")
                        .WithMany("OrderAttributeValues")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItemMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", "OrderItem")
                        .WithMany("OrderItemMemos")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItemStockAttrValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", "OrderItem")
                        .WithMany("OrderItemStockAttrValues")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", "StockAttribute")
                        .WithMany("OrderItemStockAttrValues")
                        .HasForeignKey("StockAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("StockAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", "Order")
                        .WithMany("OrderMemos")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("PoAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttribute", "PoAttribute")
                        .WithMany("PoAttributeValues")
                        .HasForeignKey("PoAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PoAttributeValues")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoAttribute");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PoMemos")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoType", "PoType")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("PoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductAttributeValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("ProductAttributeValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Receipts")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptType", "ReceiptType")
                        .WithMany("Receipts")
                        .HasForeignKey("ReceiptTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");

                    b.Navigation("ReceiptType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("ReceiptAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttribute", "ReceiptAttribute")
                        .WithMany("ReceiptAttributeValues")
                        .HasForeignKey("ReceiptAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", "Receipt")
                        .WithMany("ReceiptAttributeValues")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");

                    b.Navigation("ReceiptAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItem", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", "Receipt")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", "Unit")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItemMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItem", "ReceiptItem")
                        .WithMany("ReceiptItemMemos")
                        .HasForeignKey("ReceiptItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptItem");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItmStockAttrValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", null)
                        .WithMany("ReceiptItmStockAttrValues")
                        .HasForeignKey("ReceiptId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItem", "ReceiptItem")
                        .WithMany()
                        .HasForeignKey("ReceiptItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", "StockAttribute")
                        .WithMany("ReceiptItmStockAttrValues")
                        .HasForeignKey("StockAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptItem");

                    b.Navigation("StockAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", "Receipt")
                        .WithMany("ReceiptMemos")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Customer", "Customer")
                        .WithMany("Returns")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnType", "ReturnType")
                        .WithMany("Returns")
                        .HasForeignKey("ReturnTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ReturnType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("ReturnAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttribute", "ReturnAttribute")
                        .WithMany("ReturnAttributeValues")
                        .HasForeignKey("ReturnAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", "Return")
                        .WithMany("ReturnAttributeValues")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Return");

                    b.Navigation("ReturnAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItem", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("ReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", "Return")
                        .WithMany("ReturnItems")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", "Unit")
                        .WithMany("ReturnItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Return");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItemMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItem", "ReturnItem")
                        .WithMany("ReturnItemMemos")
                        .HasForeignKey("ReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnItem");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItmStockAttrValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItem", "ReturnItem")
                        .WithMany("ReturnItmStockAttrValues")
                        .HasForeignKey("ReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", "StockAttribute")
                        .WithMany("ReturnItmStockAttrValues")
                        .HasForeignKey("StockAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReturnItem");

                    b.Navigation("StockAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", "Return")
                        .WithMany("ReturnMemos")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Return");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItem", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", "OrderItem")
                        .WithMany("OrderShipItems")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ProgressStatus", "ProgressStatus")
                        .WithMany("OrderShipItems")
                        .HasForeignKey("ProgressStatusId1");

                    b.Navigation("OrderItem");

                    b.Navigation("ProgressStatus");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemStock", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemTask", "OrderShipItemTask")
                        .WithMany("OrderShipItemStocks")
                        .HasForeignKey("OrderShipItemTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderShipItemTask");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemTask", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItem", "OrderShipItem")
                        .WithMany("OrderShipItemTasks")
                        .HasForeignKey("OrderShipItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderShipItem");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipment", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ProgressStatus", "ProgressStatus")
                        .WithMany("OrderShipments")
                        .HasForeignKey("ProgressStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProgressStatus");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.Shipment", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Branch", "Branch")
                        .WithMany("Shipments")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Disturbitor", "Disturbitor")
                        .WithMany("Shipments")
                        .HasForeignKey("DisturbitorId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentType", "ShipmentType")
                        .WithMany("Shipments")
                        .HasForeignKey("ShipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Disturbitor");

                    b.Navigation("ShipmentType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("ShipmentAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttribute", "ShipmentAttribute")
                        .WithMany("ShipmentAttributeValues")
                        .HasForeignKey("ShipmentAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.Shipment", "Shipment")
                        .WithMany("ShipmentAttributeValues")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");

                    b.Navigation("ShipmentAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.Shipment", "Shipment")
                        .WithMany("ShipmentMemos")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", "Location")
                        .WithMany("Stocks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", "Return")
                        .WithMany()
                        .HasForeignKey("ReturnId");

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockContainer", "StockContainer")
                        .WithMany("Stocks")
                        .HasForeignKey("StockContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", "Unit")
                        .WithMany("Stocks")
                        .HasForeignKey("UnitId1");

                    b.Navigation("Location");

                    b.Navigation("Product");

                    b.Navigation("Receipt");

                    b.Navigation("Return");

                    b.Navigation("StockContainer");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", "AttributeInputType")
                        .WithMany("StockAttributes")
                        .HasForeignKey("AttributeInputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeInputType");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttributeValue", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", "StockAttribute")
                        .WithMany("StockAttributeValues")
                        .HasForeignKey("StockAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("StockAttributeValues")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("StockAttribute");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockContainer", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ContainerUnit", "ContainerUnit")
                        .WithMany()
                        .HasForeignKey("ContainerUnitId1");

                    b.Navigation("ContainerUnit");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockMemo", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("StockMemos")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockReserveReason", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", "ReserveReason")
                        .WithMany("StockReserveReasons")
                        .HasForeignKey("ReserveReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("StockReserveReasons")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReserveReason");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockUnsuitReason", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("StockUnsuitReasons")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", "UnsuitReason")
                        .WithMany("StockUnsuitReasons")
                        .HasForeignKey("UnsuitReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("UnsuitReason");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.TaskStock", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("TaskStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.WorkTask", b =>
                {
                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Status", "Status")
                        .WithMany("WorkTasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", "Stock")
                        .WithMany("WorkTasks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TaskList", "TaskList")
                        .WithMany("WorkTasks")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TransactionType", "TransactionType")
                        .WithMany("WorkTasks")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Stock");

                    b.Navigation("TaskList");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Orhanization.Core.Security.Entities.User", "User")
                        .WithMany("EmailAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Orhanization.Core.Security.Entities.User", "User")
                        .WithMany("OtpAuthenticators")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.RefreshToken", b =>
                {
                    b.HasOne("Orhanization.Core.Security.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Orhanization.Core.Security.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orhanization.Core.Security.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.BarcodeEntities.Barcode", b =>
                {
                    b.Navigation("BarcodeAreas");

                    b.Navigation("Printers");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.AttributeInputType", b =>
                {
                    b.Navigation("OrderAttributes");

                    b.Navigation("PoAttributes");

                    b.Navigation("ProductAttributes");

                    b.Navigation("ReceiptAttributes");

                    b.Navigation("ReturnAttributes");

                    b.Navigation("ShipmentAttributes");

                    b.Navigation("StockAttributes");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ProgressStatus", b =>
                {
                    b.Navigation("OrderShipItems");

                    b.Navigation("OrderShipments");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.ReserveReason", b =>
                {
                    b.Navigation("LogStockReserveReasons");

                    b.Navigation("StockReserveReasons");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Status", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.Unit", b =>
                {
                    b.Navigation("ReceiptItems");

                    b.Navigation("ReturnItems");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.CommonEntities.UnsuitReason", b =>
                {
                    b.Navigation("LogStockUnsuitReasons");

                    b.Navigation("StockUnsuitReasons");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Branch", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Company", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Disturbitors");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.DepositorCompany", b =>
                {
                    b.Navigation("Depositors");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Disturbitor", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.DepositorEntities.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Building", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Customers");

                    b.Navigation("Depositors");

                    b.Navigation("Disturbitors");

                    b.Navigation("Receivers");

                    b.Navigation("Sites");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Location", b =>
                {
                    b.Navigation("LogStocks");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.Site", b =>
                {
                    b.Navigation("StorageSystems");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LocationEntities.StorageSystem", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.LogStock", b =>
                {
                    b.Navigation("LogStockAttributeValues");

                    b.Navigation("LogStockContainers");

                    b.Navigation("LogStockReserveReasons");

                    b.Navigation("LogStockUnsuitReasons");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.LoggingEntities.TransactionLog", b =>
                {
                    b.Navigation("LogStocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.Order", b =>
                {
                    b.Navigation("OrderAttributeValues");

                    b.Navigation("OrderItems");

                    b.Navigation("OrderMemos");

                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderAttribute", b =>
                {
                    b.Navigation("OrderAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderItem", b =>
                {
                    b.Navigation("OrderItemMemos");

                    b.Navigation("OrderItemStockAttrValues");

                    b.Navigation("OrderShipItems");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.OrderEntities.OrderType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoAttribute", b =>
                {
                    b.Navigation("PoAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PoType", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.POEntities.PurchaseOrder", b =>
                {
                    b.Navigation("PoAttributeValues");

                    b.Navigation("PoMemos");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.Product", b =>
                {
                    b.Navigation("LogStocks");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductAttributeValues");

                    b.Navigation("ReceiptItems");

                    b.Navigation("ReturnItems");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ProductEntities.ProductAttribute", b =>
                {
                    b.Navigation("ProductAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.Receipt", b =>
                {
                    b.Navigation("ReceiptAttributeValues");

                    b.Navigation("ReceiptItems");

                    b.Navigation("ReceiptItmStockAttrValues");

                    b.Navigation("ReceiptMemos");

                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptAttribute", b =>
                {
                    b.Navigation("ReceiptAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptItem", b =>
                {
                    b.Navigation("ReceiptItemMemos");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReceiptEntities.ReceiptType", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.Return", b =>
                {
                    b.Navigation("ReturnAttributeValues");

                    b.Navigation("ReturnItems");

                    b.Navigation("ReturnMemos");

                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnAttribute", b =>
                {
                    b.Navigation("ReturnAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnItem", b =>
                {
                    b.Navigation("ReturnItemMemos");

                    b.Navigation("ReturnItmStockAttrValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ReturnEntities.ReturnType", b =>
                {
                    b.Navigation("Returns");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItem", b =>
                {
                    b.Navigation("OrderShipItemTasks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.OrderShipItemTask", b =>
                {
                    b.Navigation("OrderShipItemStocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.Shipment", b =>
                {
                    b.Navigation("ShipmentAttributeValues");

                    b.Navigation("ShipmentMemos");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentAttribute", b =>
                {
                    b.Navigation("ShipmentAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.ShipmentEntities.ShipmentType", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.Stock", b =>
                {
                    b.Navigation("StockAttributeValues");

                    b.Navigation("StockMemos");

                    b.Navigation("StockReserveReasons");

                    b.Navigation("StockUnsuitReasons");

                    b.Navigation("TaskStocks");

                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockAttribute", b =>
                {
                    b.Navigation("LogStockAttributeValues");

                    b.Navigation("OrderItemStockAttrValues");

                    b.Navigation("ReceiptItmStockAttrValues");

                    b.Navigation("ReturnItmStockAttrValues");

                    b.Navigation("StockAttributeValues");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.StockEntities.StockContainer", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TaskList", b =>
                {
                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.TransactionType", b =>
                {
                    b.Navigation("LogStocks");

                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("Monstersoft.VennWms.Main.Domain.Entities.TaskEntities.WorkTask", b =>
                {
                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Orhanization.Core.Security.Entities.User", b =>
                {
                    b.Navigation("EmailAuthenticators");

                    b.Navigation("OtpAuthenticators");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
